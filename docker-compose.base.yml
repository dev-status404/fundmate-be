x-basic-health: &basic-health
  interval: 10s
  timeout: 5s
  retries: 3
  start_period: 30s

services:
  api-gateway_blue:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: api-gateway
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    image: fundmate-gateway:blue
    container_name: api-gateway_blue
    environment:
      API_GATEWAY_PORT: ${API_GATEWAY_PORT}
    healthcheck:
      test: ['CMD','curl','-f','http://localhost:${API_GATEWAY_PORT}/health']
      <<: *basic-health
    depends_on:
      - auth-service
      - user-service
      - funding-service
      - interaction-service
      - payment-service
      - public-service
      - ai-service
    networks:
      - backend
    restart: unless-stopped

  api-gateway_green:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: api-gateway
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    image: fundmate-gateway:green
    container_name: api-gateway_green
    environment:
      API_GATEWAY_PORT: ${API_GATEWAY_PORT}
    healthcheck:
      test: ['CMD','curl','-f','http://localhost:${API_GATEWAY_PORT}/health']
      <<: *basic-health
    depends_on:
      - auth-service
      - user-service
      - funding-service
      - interaction-service
      - payment-service
      - public-service
      - ai-service
    networks:
      - backend
    restart: unless-stopped

  auth-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: auth-service
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    environment:
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${AUTH_SERVICE_PORT}/health']
      <<: *basic-health

    networks:
      - backend
    restart: unless-stopped

  user-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: user-service
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    environment:
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${USER_SERVICE_PORT}/health']
      <<: *basic-health
    networks:
      - backend
    restart: unless-stopped

  funding-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: funding-service
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    environment:
      FUNDING_SERVICE_PORT: ${FUNDING_SERVICE_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${FUNDING_SERVICE_PORT}/health']
      <<: *basic-health
    networks:
      - backend
    restart: unless-stopped

  interaction-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: interaction-service
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    environment:
      INTERACTION_SERVICE_PORT: ${INTERACTION_SERVICE_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${INTERACTION_SERVICE_PORT}/health']
      <<: *basic-health
    networks:
      - backend
    restart: unless-stopped

  payment-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: payment-service
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    environment:
      PAYMENT_SERVICE_PORT: ${PAYMENT_SERVICE_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${PAYMENT_SERVICE_PORT}/health']
      <<: *basic-health
    networks:
      - backend
    restart: unless-stopped

  public-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: public-service
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    environment:
      PUBLIC_SERVICE_PORT: ${PUBLIC_SERVICE_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${PUBLIC_SERVICE_PORT}/health']
      <<: *basic-health
    networks:
      - backend
    restart: unless-stopped

  ai-service:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        SERVICE: ai-service
        HOST: '0.0.0.0'
        NODE_ENV: 'docker'
    environment:
      AI_SERVICE_PORT: ${AI_SERVICE_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${AI_SERVICE_PORT}/health']
      <<: *basic-health
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
